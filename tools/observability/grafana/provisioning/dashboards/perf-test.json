{
   "annotations": {
      "list": [
         {
            "datasource": {
               "type": "prometheus",
               "uid": "Prometheus"
            },
            "enable": true,
            "expr": "test_status",
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Test Execution",
            "titleFormat": "{{spec}}"
         }
      ]
   },
   "description": "Dashboards for Kong Mesh performance tests",
   "panels": [
      {
         "collapsed": false,
         "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
         },
         "id": 1,
         "panels": [ ],
         "title": "Kubernetes",
         "type": "row"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Average time between Pod creation and readiness",
         "fieldConfig": {
            "defaults": {
               "unit": "ms"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 1
         },
         "id": 2,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "quantile(0.50, kube_pod_status_ready_time - kube_pod_created{namespace=\"kuma-test\"})",
               "legendFormat": "0.50"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "quantile(0.90, kube_pod_status_ready_time - kube_pod_created{namespace=\"kuma-test\"})",
               "legendFormat": "0.90"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "quantile(0.99, kube_pod_status_ready_time - kube_pod_created{namespace=\"kuma-test\"})",
               "legendFormat": "0.99"
            }
         ],
         "title": "Pod Startup Time",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "The latency between a request sent from a client and a response returned by kube-apiserver",
         "fieldConfig": {
            "defaults": {
               "unit": "s"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 1
         },
         "id": 3,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.50, sum(rate(apiserver_request_duration_seconds_bucket{group=\"kuma.io\"}[$__rate_interval])) by (le))",
               "legendFormat": "0.50"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.90, sum(rate(apiserver_request_duration_seconds_bucket{group=\"kuma.io\"}[$__rate_interval])) by (le))",
               "legendFormat": "0.90"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{group=\"kuma.io\"}[$__rate_interval])) by (le))",
               "legendFormat": "0.99"
            }
         ],
         "title": "Latency of Kube API server responses",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Length of time per reconcile for pod controller",
         "fieldConfig": {
            "defaults": {
               "unit": "s"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 1
         },
         "id": 4,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.50, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"pod\"}[$__rate_interval])) by (le))",
               "legendFormat": "0.50"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.90, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"pod\"}[$__rate_interval])) by (le))",
               "legendFormat": "0.90"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.99, sum(rate(controller_runtime_reconcile_time_seconds_bucket{controller=\"pod\"}[$__rate_interval])) by (le))",
               "legendFormat": "0.99"
            }
         ],
         "title": "Latency of Pod to Dataplane conversion",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "",
         "fieldConfig": {
            "defaults": {
               "unit": "ops"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 10
         },
         "id": 5,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "sum by (result) (rate(controller_runtime_reconcile_total{controller=\"pod\"}[$__rate_interval]))",
               "legendFormat": "{{result}}"
            }
         ],
         "title": "Number of Pod reconciliation ",
         "type": "timeseries"
      },
      {
         "collapsed": false,
         "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 18
         },
         "id": 6,
         "panels": [ ],
         "title": "Kuma Control Plane",
         "type": "row"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Time between setting the config into snapshot up to receiving ACK/NACK",
         "fieldConfig": {
            "defaults": {
               "unit": "ms"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 19
         },
         "id": 7,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "xds_delivery",
               "legendFormat": "{{quantile}}"
            }
         ],
         "title": "Latency of XDS config delivery",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Time spent on generating XDS config",
         "fieldConfig": {
            "defaults": {
               "unit": "ms"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 19
         },
         "id": 8,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "xds_generation{result=\"changed\"}",
               "legendFormat": "{{quantile}}"
            }
         ],
         "title": "Latency of XDS config generation",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "The latency between a request sent from a Kuma CP and a response returned by store",
         "fieldConfig": {
            "defaults": {
               "unit": "s"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 19
         },
         "id": 9,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.50, sum(rate(store_bucket[$__rate_interval])) by (le))",
               "legendFormat": "0.50"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.90, sum(rate(store_bucket[$__rate_interval])) by (le))",
               "legendFormat": "0.90"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.99, sum(rate(store_bucket[$__rate_interval])) by (le))",
               "legendFormat": "0.99"
            }
         ],
         "title": "Latency of store operations",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "The latency between a request sent from a client and a response returned by Kuma API Server",
         "fieldConfig": {
            "defaults": {
               "unit": "s"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 28
         },
         "id": 10,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.50, sum(rate(api_server_http_request_duration_seconds_bucket[$__rate_interval])) by (le))",
               "legendFormat": "0.50"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.90, sum(rate(api_server_http_request_duration_seconds_bucket[$__rate_interval])) by (le))",
               "legendFormat": "0.90"
            },
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "histogram_quantile(0.99, sum(rate(api_server_http_request_duration_seconds_bucket[$__rate_interval])) by (le))",
               "legendFormat": "0.99"
            }
         ],
         "title": "Latency of Kuma API server responses",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Number of snapshot reconciliations both when config changed and skipped",
         "fieldConfig": {
            "defaults": {
               "unit": "ops"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 28
         },
         "id": 11,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "rate(xds_generation_count[$__rate_interval])",
               "legendFormat": "{{result}}"
            }
         ],
         "title": "Number of XDS reconciliations",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Number of requests Kuma CP is producing against the store",
         "fieldConfig": {
            "defaults": {
               "unit": "ops"
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 16,
            "y": 28
         },
         "id": 12,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "sum by (operation) (rate(store_count[$__rate_interval]))",
               "legendFormat": "{{operation}}"
            }
         ],
         "title": "Number of store operations",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Cache protects ClusterLoadAssignments resources by sharing them between many goroutines which reconcile Dataplanes.\n\nhit - request was retrieved from the cache.\n\nhit-wait - request was retrieved from the cache after waiting for a concurrent request to fetch it from the database.\n\nmiss - request was fetched from the database\n\nRefer to https://kuma.io/docs/latest/documentation/fine-tuning/#snapshot-generation\n",
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "fillOpacity": 25,
                  "stacking": {
                     "mode": "percent"
                  }
               }
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 0,
            "y": 37
         },
         "id": 13,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "sum by (result) (rate(cla_cache[$__rate_interval]))",
               "legendFormat": "{{result}}"
            }
         ],
         "title": "Endpoints cache performance",
         "type": "timeseries"
      },
      {
         "datasource": {
            "type": "datasource",
            "uid": "-- Mixed --"
         },
         "description": "Mesh Cache protects hashes calculated periodically for each Mesh in order to avoid the excessive generation of xDS resources.\n\nhit - request was retrieved from the cache.\n\nhit-wait - request was retrieved from the cache after waiting for a concurrent request to fetch it from the database.\n\nmiss - request was fetched from the database\n\nRefer to https://kuma.io/docs/latest/documentation/fine-tuning/#snapshot-generation\n",
         "fieldConfig": {
            "defaults": {
               "custom": {
                  "fillOpacity": 25,
                  "stacking": {
                     "mode": "percent"
                  }
               }
            }
         },
         "gridPos": {
            "h": 8,
            "w": 8,
            "x": 8,
            "y": 37
         },
         "id": 14,
         "targets": [
            {
               "datasource": {
                  "type": "prometheus",
                  "uid": "Prometheus"
               },
               "expr": "sum by (result) (rate(mesh_cache[$__rate_interval]))",
               "legendFormat": "{{result}}"
            }
         ],
         "title": "Mesh resources hash cache performance",
         "type": "timeseries"
      }
   ],
   "schemaVersion": 36,
   "time": {
      "from": "now-6h",
      "to": "now"
   },
   "timezone": "utc",
   "title": "Perf Test",
   "uid": "perf-test"
}
